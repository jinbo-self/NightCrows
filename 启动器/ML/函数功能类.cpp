#include "pch.h"
#include "CMainDialogWnd.h"



void 穿戴装备(识字类 识字, 键鼠类 键鼠, 识图类 识图)
{
    if (!识字.查找背包())
    {
        键鼠.按下按键('I');
    }

    //背包左右间距54 996，137；1050，137；1104，137；1158，137  》190
    //上下间距54，137，191，245，299
    Sleep(1000);
    键鼠.移动鼠标(1247, 210); //装备栏
    键鼠.点击鼠标左键();
    Sleep(1000);
    键鼠.移动鼠标(1188, 636);//整理背包
    键鼠.点击鼠标左键();
    Sleep(1000);
    识图坐标 背包E起始 = { 996,137,{204,183,142} };
    //先脱下所有装备
    int 背包装备x[4] = { 1017,1069,1127,1178 }; //直接记录一行的位置
    while (识字.查找背包() && 识图.识别颜色(背包E起始)[0] > 190)
    {
        if (GetAsyncKeyState(VK_END) & 0x8000) {
            return;
        }
        for (int index = 0; index < 4; index++)
        {
            if (GetAsyncKeyState(VK_END) & 0x8000) {
                return;
            }
            int 背包x = 背包装备x[index];
            if (识图.识别颜色({ 背包E起始.x + index * 54,137 })[0] > 190)
            {
                键鼠.移动鼠标(背包x, 137);
                键鼠.点击鼠标左键();
                Sleep(200);
                键鼠.点击鼠标左键();
                Sleep(1500);
            }


        }
        键鼠.移动鼠标(1188, 636);//整理背包
        键鼠.点击鼠标左键();
        Sleep(1500);
    }

    //计算装备数量
    int index = 0;
    识图坐标 背包起始 = { 1004,140 };//25*25
    int 装备数量 = 0;
    while (识字.查找背包())
    {
        if (GetAsyncKeyState(VK_END) & 0x8000) {
            return;
        }
        int 背包y = 背包起始.y + index * 54;
        bool 跳出 = false;
        for (size_t i = 0; i < 4; i++)
        {
            if (GetAsyncKeyState(VK_END) & 0x8000) {
                return;
            }
            int 背包x = 背包起始.x + i * 54;
            std::array<BYTE, 3> 检测色块 = { 60,60,60 };
            if (!识图.检查范围内颜色(背包x, 背包y, 25, 25, 检测色块))
            {
                装备数量 = index * 4 + i;
                跳出 = true;
                break;
            }
        }
        if (跳出)
        {
            break;
        }
        index++;
    }
    OutputDebugString(std::to_wstring(装备数量).c_str());
    //从尾部开始穿戴
    OutputDebugString(L"从尾部开始穿戴\n");
    //第一个装备还是需要穿戴
    背包起始 = { 1019,155 };//25*25
    while (装备数量 > -1)
    {
        if (GetAsyncKeyState(VK_END) & 0x8000) {
            return;
        }
        int 行号 = 装备数量 / 4;//13/4=3...1  12/4=3...0
        int 列号 = 装备数量 % 4;
        识图坐标 坐标 = { 背包起始.x + 列号 * 54,背包起始.y + 行号 * 54 };
        键鼠.移动鼠标(坐标.x, 坐标.y);
        键鼠.点击鼠标左键();
        Sleep(500);
        键鼠.点击鼠标左键();
        Sleep(1500);
        装备数量--;
    }
    if (识字.查找背包())
    {
        键鼠.按下按键('I');
    }
}

void 学习和摆放技能(识字类 识字, 键鼠类 键鼠, 识图类 识图)
{
    //学习技能
    if (!识字.查找背包())
    {
        键鼠.按下按键('I');
    }
    Sleep(500);
    键鼠.移动鼠标(1248, 277); //背包藏品栏
    键鼠.点击鼠标左键();
    Sleep(500);
    键鼠.移动鼠标(1188, 636);//整理背包
    键鼠.点击鼠标左键();
    Sleep(500);
    int index = 0;
    识图坐标 背包起始 = { 1004,140 };//25*25
    int 物品数量 = 0;

    //查找背包,学习技能
    while (识字.查找背包())
    {
        if (GetAsyncKeyState(VK_END) & 0x8000) {
            return;
        }
        int 背包y = 背包起始.y + index * 54;
        bool 跳出 = false;
        for (size_t i = 0; i < 4; i++)
        {
            if (GetAsyncKeyState(VK_END) & 0x8000) {
                return;
            }
            int 背包x = 背包起始.x + i * 54;
            std::array<BYTE, 3> 检测色块 = { 60,60,60 };
            if (!识图.检查范围内颜色(背包x, 背包y, 25, 25, 检测色块))
            {
                物品数量 = index * 4 + i;
                跳出 = true;
                break;
            }
            else
            {
                键鼠.移动鼠标(背包x, 背包y);
                键鼠.点击鼠标左键();
                Sleep(1000);
                if (识字.查找背包技能书说明())
                {
                    键鼠.点击鼠标左键();
                    Sleep(1000);
                }
            }
        }
        if (跳出)
        {
            break;
        }
        index++;
    }

    //摆放技能
    if (!识字.查找主动技能())
    {
        键鼠.按下按键('K');
    }
    Sleep(500);
    键鼠.移动鼠标(1243, 147); //主动技能栏
    键鼠.点击鼠标左键();

    Sleep(500);
    键鼠.移动鼠标(1036, 638); //技能排序
    键鼠.点击鼠标左键();

    Sleep(500);
    if (!识字.查找技能排序自动释放())
    {
        键鼠.移动鼠标((识字.技能排序自动释放.x1 + 识字.技能排序自动释放.x2) / 2, (识字.技能排序自动释放.y1 + 识字.技能排序自动释放.y2) / 2);
        键鼠.点击鼠标左键();
    }
    //反复释放
    if (识图.识别颜色({ 37,649 })[0] < 100 && 识图.识别颜色({ 37,649 })[1] < 100 && 识图.识别颜色({ 37,649 })[2] < 100)
    {
        Sleep(500);
        键鼠.移动鼠标(37, 649);
        键鼠.点击鼠标左键();
    }
    //PVP释放
    if (识图.识别颜色({ 157,649 })[0] < 100 && 识图.识别颜色({ 157,649 })[1] < 100 && 识图.识别颜色({ 157,649 })[2] < 100)
    {
        Sleep(500);
        键鼠.移动鼠标(157, 649);
        键鼠.点击鼠标左键();
    }
    //跳过无法释放的技能
    if (识图.识别颜色({ 37,679 })[0] < 100 && 识图.识别颜色({ 37,679 })[1] < 100 && 识图.识别颜色({ 37,679 })[2] < 100)
    {
        Sleep(500);
        键鼠.移动鼠标(37, 679);
        键鼠.点击鼠标左键();
    }
    //猎人开启决心
    if (!识字.查找猎人_决心技能自动开启()) {
        Sleep(500);
        键鼠.移动鼠标((识字.猎人_决心技能自动开启.x1 + 识字.猎人_决心技能自动开启.x2) / 2, (识字.猎人_决心技能自动开启.y1 + 识字.猎人_决心技能自动开启.y2) / 2);
        键鼠.点击鼠标左键();
    }

    //重置技能
    Sleep(500);
    键鼠.移动鼠标(96, 714);
    键鼠.点击鼠标左键();
    Sleep(500);
    键鼠.按下按键('Y');
    Sleep(500);
    //放置技能1
    键鼠.移动鼠标(1010, 162);
    键鼠.点击鼠标左键();
    Sleep(500);
    键鼠.点击鼠标左键();
    Sleep(500);
    //放置技能2
    键鼠.移动鼠标(1010, 222);
    键鼠.点击鼠标左键();
    Sleep(500);
    键鼠.点击鼠标左键();
    Sleep(500);
    //放置技能3
    键鼠.移动鼠标(1010, 288);
    键鼠.点击鼠标左键();
    Sleep(500);
    键鼠.点击鼠标左键();
    Sleep(500);
    //放置技能4
    键鼠.移动鼠标(1010, 352);
    键鼠.点击鼠标左键();
    Sleep(500);
    键鼠.点击鼠标左键();
    Sleep(500);
    //完成放置
    键鼠.移动鼠标(1033, 637);
    键鼠.点击鼠标左键();
    Sleep(500);

    //关闭技能栏
    if (识字.查找主动技能())
    {
        键鼠.按下按键('K');
    }
}

void 嗑状态药(识字类 识字, 键鼠类 键鼠, 识图类 识图)
{
    if (!识字.查找背包())
    {
        键鼠.按下按键('I');
    }
    键鼠.移动鼠标(1245, 338);
    键鼠.点击鼠标左键();
    Sleep(1000);

    //背包遍历
    int index = 0;
    识图坐标 背包起始 = { 1004,140 };//25*25
    int 物品数量 = 0;
    while (识字.查找背包())
    {
        if (GetAsyncKeyState(VK_END) & 0x8000) {
            return;
        }
        int 背包y = 背包起始.y + index * 54;
        bool 跳出 = false;
        for (size_t i = 0; i < 4; i++)
        {
            if (GetAsyncKeyState(VK_END) & 0x8000) {
                return;
            }
            int 背包x = 背包起始.x + i * 54;
            std::array<BYTE, 3> 检测色块 = { 60,60,60 };
            //没检测到就是空的背包栏
            if (!识图.检查范围内颜色(背包x, 背包y, 25, 25, 检测色块))
            {
                物品数量 = index * 4 + i;
                跳出 = true;
                break;
            }
            else
            {
                键鼠.移动鼠标(背包x, 背包y);
                键鼠.点击鼠标左键();
                Sleep(1000);
                键鼠.点击鼠标左键();
                Sleep(1000);
            }
        }
        if (跳出)
        {
            break;
        }
        index++;
    }
    if (!识字.查找背包())
    {
        键鼠.按下按键('I');
    }

}

void 买药(识字类 识字, 键鼠类 键鼠, 识图类 识图)
{
    //去地图杂货店
    if (!识字.查找大地图_世界())
    {
        键鼠.按下按键('M');//打开地图传送回去买药
    }
    while (!识图.查找大地图据点() && 识字.查找大地图_世界())
    {
        if (GetAsyncKeyState(VK_END) & 0x8000) {
            return;
        }
        键鼠.移动鼠标(1051, 199);
        键鼠.按下鼠标左键();
        Sleep(1000);
        键鼠.移动鼠标(1051, 689);
        Sleep(1000);
        键鼠.弹起鼠标左键();
        Sleep(1000);
    }
    if (识图.查找大地图据点())
    {
        键鼠.移动鼠标(1051, 199);
        键鼠.点击鼠标左键();
        Sleep(1000);

        键鼠.移动鼠标(144, 171);
        键鼠.点击鼠标左键();
        Sleep(1000);
        键鼠.按下按键('Y');
    }

    //购买
    //先购买70%瓶药水
    DWORD startTime = GetTickCount64();
    while (!识字.查找杂货商人()) {
        if (GetAsyncKeyState(VK_END) & 0x8000 || GetTickCount64() - startTime > 60000) {
            return;
        }
        Sleep(100);
    }
    Sleep(2000);
    键鼠.移动鼠标(256, 134);
    键鼠.点击鼠标左键();
    Sleep(1000);
    键鼠.移动鼠标(727, 403);
    键鼠.点击鼠标左键();
    Sleep(1000);
    键鼠.按下按键('Y');
    Sleep(1000);
    键鼠.按下按键(VK_ESCAPE);
    //再购买

}

void 通行证领取(识字类 识字, 键鼠类 键鼠, 识图类 识图)
{
    Sleep(1000);
    //打开通行证
    键鼠.移动鼠标(203, 58);
    Sleep(500);
    键鼠.点击鼠标左键();
    Sleep(1000);

    //领取第一个
    键鼠.移动鼠标(308, 241);
    Sleep(500);
    键鼠.点击鼠标左键();
    Sleep(1000);

    键鼠.移动鼠标(1000, 553);
    Sleep(500);
    键鼠.点击鼠标左键();
    Sleep(1500);
    键鼠.点击鼠标左键();
    Sleep(500);
    //领取第二个
    键鼠.移动鼠标(308, 346);
    Sleep(500);
    键鼠.点击鼠标左键();
    Sleep(1000);

    键鼠.移动鼠标(1000, 553);
    Sleep(500);
    键鼠.点击鼠标左键();
    Sleep(1500);
    键鼠.点击鼠标左键();
    Sleep(500);

    //领取第三个
    键鼠.移动鼠标(308, 450);
    Sleep(500);
    键鼠.点击鼠标左键();
    Sleep(1000);

    键鼠.移动鼠标(1000, 553);
    Sleep(500);
    键鼠.点击鼠标左键();
    Sleep(1500);
    键鼠.点击鼠标左键();
    Sleep(500);

    //领取第四个
    键鼠.移动鼠标(308, 544);
    Sleep(500);
    键鼠.点击鼠标左键();
    Sleep(1000);

    键鼠.移动鼠标(1000, 553);
    Sleep(500);
    键鼠.点击鼠标左键();
    Sleep(1500);
    键鼠.点击鼠标左键();
    Sleep(500);
    //需要确保一定关掉了窗口
    while (!(识图.isAuto() || 识图.isQuest())) {
        if (GetAsyncKeyState(VK_END) & 0x8000) {
            return;
        }
        键鼠.按下按键(VK_ESCAPE);
    }
    Sleep(500);
}

void 成就领取(识字类 识字, 键鼠类 键鼠, 识图类 识图)
{
}

void 邮箱领取(识字类 识字, 键鼠类 键鼠, 识图类 识图)
{
}

void 每日商店领取(识字类 识字, 键鼠类 键鼠, 识图类 识图)
{
}

void 开箱子(识字类 识字, 键鼠类 键鼠, 识图类 识图)
{
}

void 强化装备(识字类 识字, 键鼠类 键鼠, 识图类 识图)
{
}

void 坐骑外形装备(识字类 识字, 键鼠类 键鼠, 识图类 识图)
{
}

void 武器外形装备(识字类 识字, 键鼠类 键鼠, 识图类 识图)
{
}

void 收藏箱添加(识字类 识字, 键鼠类 键鼠, 识图类 识图)
{
}
